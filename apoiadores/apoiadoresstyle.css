body {
  margin: 0;
  font-family: Arial, sans-serif;
  background-color: #0b0a11;
  color: white;
}

.logo img {
  height: 80px;
  margin-right: 30px;
}


header {
  
  background-color: #1f1f1f;
  padding: 1rem;

}

.navbar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1rem 2rem;
}

.menu {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 20px;                
  padding: 0;
  margin: 0 auto;

}


.menu ul {
  list-style: none;

  gap: 10px;
  display: flex;
  margin: 0;
  padding: 0;
  
}

.menu li a {
  text-decoration: none;
  color: white;
  background-color: #2a2a2a;
  padding: 8px 16px;
  border-radius: 10px;
  transition: background-color 0.3s ease;
  display: inline-block;
 
}

.menu li a:hover {
  background-color: #444;
}

nav ul {
  list-style: none;
  display: flex;
  gap: 1rem;
}


/* Novo estilo para o container que envolve os cards */
.container-de-cards {
  display: flex;          /* Ativa o Flexbox */
  flex-wrap: wrap;        /* Permite que os cards quebrem para a próxima linha se não houver espaço */
  justify-content: center; /* Centraliza os cards na linha (ou use flex-start, space-around, etc.) */
  gap: 20px;              /* Espaço entre os cards (horizontal e vertical se quebrar linha) */
  padding: 20px;          /* Um preenchimento ao redor do container de cards (opcional) */
}

/* Ajustes na sua classe .apoio1 (baseado na sua imagem e CSS anterior) */
.apoio1 {
  width: 350px; /* Define uma largura fixa para os cards, ou use porcentagem como width: 45%; para 2 por linha */
                /* Se usar porcentagem, ajuste para que caibam na linha com o 'gap' */
                /* Ex: Se gap é 20px, width: calc(50% - 10px); para 2 por linha */
  /* margin: 20px auto;  Remova o 'auto' para margem horizontal, o flex container cuida disso */
  margin-top: 0; /* O gap já cuida do espaçamento superior se houver quebra de linha */
  margin-bottom: 0; /* O gap já cuida do espaçamento inferior */
  padding: 20px;
  border: 1px solid #ddd; /* Borda mais clara para card branco */
  border-radius: 8px;
  background-color: #ffffff; /* Fundo BRANCO como na sua imagem */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Sombra mais suave para card branco */
  display: flex;
  flex-direction: column;
  /* Outros estilos internos do .apoio1 (h2, conteudo-principal, etc.) permanecem os mesmos */
}

/* Estilos internos do card (do seu CSS anterior, adaptados para o fundo branco) */
.apoio1 h2 {
  text-align: center;
  color: #333333; /* Cor escura para texto em fundo branco */
  margin: 0 0 20px 0;
  font-size: 1.3em; /* Ajuste o tamanho da fonte se necessário */
}

.conteudo-principal {
  display: flex;
  width: 100%;
  align-items: flex-start;
}

.imagem-container {
  flex: 0 0 40%; /* Imagem ocupa 40% */
  margin-right: 15px; /* Reduzido um pouco o espaço */
}

.imagem-container .logo-img {
  width: 100%;
  height: auto;
  display: block;
  border: none; /* Removida a borda da imagem, já que o card tem borda e a imagem pode ter fundo transparente */
}

.links-container {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  padding-top: 5px; /* Pequeno ajuste para alinhar melhor com a imagem visualmente */
}

.links-container a {
  text-align: left;
  margin-bottom: 8px; /* Reduzido o espaço entre links */
  text-decoration: none;
  padding: 3px 0;
  font-size: 0.9em;
}

.links-container a[href*="instagram"] {
  color: rgb(35, 255, 35);
}

.links-container a[href*="facebook"] {
  color: #1877F2; /* Cor oficial do Facebook */
}

.links-container a:hover {
  text-decoration: underline;
}

.links-container a:last-child {
  margin-bottom: 0;
}

.footer {
  background-color: #1f1f1f;
  color: white;
  text-align: center;
  padding: 20px 0;
  font-size: 14px;
  margin-top: 40px;
}


@media (max-width: 768px) {
   .navbar {
        flex-direction: column; /* Empilha o logo e o menu */
        align-items: center;   /* Centraliza os itens empilhados (logo e depois o bloco do menu) */
        padding: 1rem;         /* Reduz um pouco o padding do navbar */
    }

    .logo img {
        height: 60px;         /* Logo um pouco menor */
        margin-right: 0;      /* Remove a margem direita, já que vai ser centralizado ou empilhado */
        margin-bottom: 15px;  /* Adiciona espaço abaixo do logo quando empilhado com o menu */
    }

    .menu {
        /* O .menu em desktop tem 'margin: 0 auto;' e 'justify-content: center'
           Quando o .navbar vira column, o .menu vai ocupar a largura disponível abaixo do logo.
           Vamos fazer o .menu e seus itens ocuparem a largura e centralizar o texto dos links.
        */
        width: 100%;
        flex-direction: column; /* Se o menu em si precisar empilhar algo, embora o ul já vá */
        gap: 10px; /* Espaço entre os itens do menu quando empilhados */
        align-items: center; /* Centraliza os itens da lista (ul) se houver largura sobrando */
    }

    .menu ul {
        flex-direction: column; /* Itens do menu (li) ficam em coluna */
        width: 100%;            /* Lista ocupa toda a largura disponível */
        gap: 8px;              /* Espaço entre os links do menu */
    }

    .menu li {
        width: 100%; /* Cada item da lista ocupa 100% da largura */
        display: block; /* Garante que o li ocupe a linha toda */
    }

    .menu li a {
        display: block;       /* Faz o link preencher o <li> */
        text-align: center;   /* Centraliza o texto do link */
        padding: 12px 10px;   /* Ajusta o padding dos links */
        width: 90%;           /* Link ocupa quase toda a largura, com margens automáticas */
        margin-left: auto;
        margin-right: auto;
        border-radius: 8px;   /* Ajusta o border-radius se necessário */
    }

    /* Nota sobre 'nav ul': Seu CSS tem um '.menu ul' e um 'nav ul'.
       Se 'nav ul' for um menu diferente, ele provavelmente precisará de tratamento similar
       (ex: flex-direction: column). Se for o mesmo menu, as regras de '.menu ul' acima o cobrirão
       se a especificidade estiver correta ou se 'nav ul' for removido/ajustado para não conflitar.
       Assumindo que .menu é o principal.
    */
    nav ul { /* Se este for um menu diferente e horizontal */
        flex-direction: column;
        align-items: center;
        gap: 0.5rem;
    }

}

/* Botão de abrir menu - escondido no desktop */
.menu-toggle {
  display: none;
  background: none;
  border: none;
  font-size: 30px;
  color: white;
  cursor: pointer;
}

/* Mobile: mostrar botão e esconder menu */
@media (max-width: 768px) {
  .menu-toggle {
    display: block;
    position: absolute;
    top: 20px;
    right: 20px;
    z-index: 1001;
  }

  .menu {
    display: none; /* Esconde o menu por padrão */
    flex-direction: column;
    align-items: center;
    background-color: #1f1f1f;
    width: 100%;
    padding: 1rem 0;
    margin-top: 60px;
  }

  .menu.show {
    display: flex; /* Mostra quando tiver a classe .show */
  }
}