body {
  margin: 0;
  font-family: Arial, sans-serif;
  background-color: #0b0a11;
  color: white;
}

.logo img {
  height: 80px;
  margin-right: 30px;
}


header {
  
  background-color: #1f1f1f;
  padding: 1rem;

}

.navbar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1rem 2rem;
}

.menu {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 20px;                
  padding: 0;
  margin: 0 auto;

}


.menu ul {
  list-style: none;

  gap: 10px;
  display: flex;
  margin: 0;
  padding: 0;
  
}

.menu li a {
  text-decoration: none;
  color: white;
  background-color: #2a2a2a;
  padding: 8px 16px;
  border-radius: 10px;
  transition: background-color 0.3s ease;
  display: inline-block;
 
}

.menu li a:hover {
  background-color: #444;
}

nav ul {
  list-style: none;
  display: flex;
  gap: 1rem;
}


/* Container principal que segura as imagens */
nav.cronograma {
  display: flex;          /* 1. Coloca as imagens UMA AO LADO DA OUTRA */
  flex-wrap: wrap;        /* 2. Se não couber, joga para a linha DE BAIXO */
  
  justify-content: center;/* Centraliza as imagens horizontalmente na linha */
  gap: 25px;              /* 3. Adiciona um ESPAÇO de 25px entre cada imagem */
  
  padding: 20px;          /* Adiciona um respiro nas bordas do container (opcional) */
  
}

/* Estilo aplicado a cada imagem dentro da nav */
.cronograma img {
  /* 4. Deixa as imagens MENORES */
  max-width: 400px; /* Define uma largura máxima. Elas não passarão disso. */
  width: 100%;      /* Faz com que se ajustem em telas menores se necessário */
  height: auto;     /* Mantém a proporção correta da imagem */
  flex-grow: 1;     /* Permite que as imagens cresçam um pouco para ocupar espaço vazio */

  /* 5. Deixa com BORDAS ARREDONDADAS */
  border-radius: 10px; /* Ajuste o valor para mais ou menos arredondamento */

  /* --- Efeitos e Melhorias Adicionais (Opcional) --- */
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15); /* Adiciona uma sombra suave */
  transition: transform 0.3s ease, box-shadow 0.3s ease; /* Animação suave para o hover */
  object-fit: cover; /* Garante que a imagem preencha a área sem distorcer */
}

/* Efeito ao passar o mouse sobre a imagem (opcional) */
.cronograma img:hover {
  transform: scale(1.05); /* Aumenta um pouco o tamanho da imagem */
  box-shadow: 0 6px 15px rgba(0, 0, 0, 0.25); /* Deixa a sombra mais forte */
  cursor: pointer;
}

.footer {
  background-color: #1f1f1f;
  color: white;
  text-align: center;
  padding: 20px 0;
  font-size: 14px;
  margin-top: 40px;
}

@media (max-width: 768px) {
   .navbar {
        flex-direction: column; /* Empilha o logo e o menu */
        align-items: center;   /* Centraliza os itens empilhados (logo e depois o bloco do menu) */
        padding: 1rem;         /* Reduz um pouco o padding do navbar */
    }

    .logo img {
        height: 60px;         /* Logo um pouco menor */
        margin-right: 0;      /* Remove a margem direita, já que vai ser centralizado ou empilhado */
        margin-bottom: 15px;  /* Adiciona espaço abaixo do logo quando empilhado com o menu */
    }

    .menu {
        /* O .menu em desktop tem 'margin: 0 auto;' e 'justify-content: center'
           Quando o .navbar vira column, o .menu vai ocupar a largura disponível abaixo do logo.
           Vamos fazer o .menu e seus itens ocuparem a largura e centralizar o texto dos links.
        */
        width: 100%;
        flex-direction: column; /* Se o menu em si precisar empilhar algo, embora o ul já vá */
        gap: 10px; /* Espaço entre os itens do menu quando empilhados */
        align-items: center; /* Centraliza os itens da lista (ul) se houver largura sobrando */
    }

    .menu ul {
        flex-direction: column; /* Itens do menu (li) ficam em coluna */
        width: 100%;            /* Lista ocupa toda a largura disponível */
        gap: 8px;              /* Espaço entre os links do menu */
    }

    .menu li {
        width: 100%; /* Cada item da lista ocupa 100% da largura */
        display: block; /* Garante que o li ocupe a linha toda */
    }

    .menu li a {
        display: block;       /* Faz o link preencher o <li> */
        text-align: center;   /* Centraliza o texto do link */
        padding: 12px 10px;   /* Ajusta o padding dos links */
        width: 90%;           /* Link ocupa quase toda a largura, com margens automáticas */
        margin-left: auto;
        margin-right: auto;
        border-radius: 8px;   /* Ajusta o border-radius se necessário */
    }

    /* Nota sobre 'nav ul': Seu CSS tem um '.menu ul' e um 'nav ul'.
       Se 'nav ul' for um menu diferente, ele provavelmente precisará de tratamento similar
       (ex: flex-direction: column). Se for o mesmo menu, as regras de '.menu ul' acima o cobrirão
       se a especificidade estiver correta ou se 'nav ul' for removido/ajustado para não conflitar.
       Assumindo que .menu é o principal.
    */
    nav ul { /* Se este for um menu diferente e horizontal */
        flex-direction: column;
        align-items: center;
        gap: 0.5rem;
    }

}

/* Botão de abrir menu - escondido no desktop */
.menu-toggle {
  display: none;
  background: none;
  border: none;
  font-size: 30px;
  color: white;
  cursor: pointer;
}

/* Mobile: mostrar botão e esconder menu */
@media (max-width: 768px) {
  .menu-toggle {
    display: block;
    position: absolute;
    top: 20px;
    right: 20px;
    z-index: 1001;
  }

  .menu {
    display: none; /* Esconde o menu por padrão */
    flex-direction: column;
    align-items: center;
    background-color: #1f1f1f;
    width: 100%;
    padding: 1rem 0;
    margin-top: 60px;
  }

  .menu.show {
    display: flex; /* Mostra quando tiver a classe .show */
  }
}
